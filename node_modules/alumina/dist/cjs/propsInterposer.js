"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.interposeProps = void 0;
const aluminaGlobal_1 = require("./aluminaGlobal");
function camelCaseToHyphenCase(str) {
    return str.replace(/[A-Z]/g, (s) => '-' + s.charAt(0).toLowerCase());
}
function styleObjectToString(obj) {
    return Object.keys(obj)
        .map((key) => {
        const value = obj[key];
        const key1 = camelCaseToHyphenCase(key);
        return `${key1}:${value};`;
    })
        .join(' ');
}
function interposeProps(props, vtype) {
    if (typeof vtype !== 'string') {
        return;
    }
    if (props) {
        for (const key in props) {
            if (key.startsWith('on')) {
                const originalProc = props[key];
                delete props[key];
                const key1 = key.toLowerCase();
                props[key1] = originalProc
                    ? (...a) => {
                        // eslint-disable-next-line @typescript-eslint/no-unsafe-call
                        originalProc?.(...a);
                        aluminaGlobal_1.aluminaGlobal.rerender();
                    }
                    : undefined;
            }
        }
        if (props.class || props.className) {
            const classes = [
                ...(Array.isArray(props.class) ? props.class : [props.class]),
                props.className,
            ]
                .filter((a) => !!a)
                .join(' ');
            delete props.className;
            props.class = classes;
        }
        if (props.style && typeof props.style === 'object') {
            props.style = styleObjectToString(props.style);
        }
    }
}
exports.interposeProps = interposeProps;
//# sourceMappingURL=propsInterposer.js.map